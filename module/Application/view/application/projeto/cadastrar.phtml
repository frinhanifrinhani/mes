<div class="box-header with-border">
    <h3 class="box-title">Cadastrar projeto</h3>
</div>
<?php
if (isset($_POST['botao_salvar']) && ($this->retorno == true)) {
    ?>
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title" id="myModalLabel"><b>Parabens!</b></h4>
                </div>
                <div class="modal-body">

                    <b>Projeto cadastrado com sucesso!</b><br /><br />
                    Você deseja fazer alguma alteração?
                </div>
                <div class="modal-footer">
                    <a href="<?= $this->url('projeto-editar', array('action' => 'editar', 'cod_projeto' => $this->ultimoProjeto)) ?>" class="btn btn-default">Sim</a>
                    <a href="/projeto" class="btn btn-danger">Não</a>
                </div>
            </div>
        </div>
    </div>
    <script>$("#myModal").modal();</script>
<?php } ?>
<hr />

<div class="content">

    <?php
    $formProjeto = $this->form_projeto;
    //$formProjeto->setAttribute('action', $this->url('projeto-cadastrar'));
    $formProjeto->prepare();
    echo $this->form()->openTag($formProjeto);
    ?>
    <div class="form-group">
        <?= $this->formRow($formProjeto->get('cod_projeto')); ?>
    </div>
    <div class="form-group">
        <?= $this->formRow($formProjeto->get('nome_projeto')); ?>
    </div>
    <div class="form-group">
        <?= $this->formRow($formProjeto->get('descricao_projeto')); ?>
    </div>
    <div class="form-group">
        <?= $this->formRow($formProjeto->get('data_inicio_projeto')); ?>
    </div>
    <div class="form-group">
        <?= $this->formRow($formProjeto->get('data_fim_projeto')); ?>
        <label id="dataFimProjetoErro" class="error" style="display: none" ></label>
    </div>
    <div class="form-group">
        <label id="dataFimProjetoErro" class="error" style="display: none" ></label>
    </div>
    <div class="form-group">
        <?= $this->formRow($formProjeto->get('cod_participante')); ?>
    </div>
    <div class="form-group">
        <?= $this->formRow($formProjeto->get('cod_status')); ?>
    </div>
    <div class="form-group">
        <!--<input type="hidden" name="cod_participante" id="cod_participante" value="<? $this->cod_participante ?>">-->
        <?= $this->formRow($formProjeto->get('botao_salvar')); ?>
        <a href="<?= $this->url('projeto') ?>" class="btn btn-danger" >Cancelar</a>
    </div>

    <?php echo $this->form()->closeTag(); ?>     
</div>
<script>
    $(function () {
        $("#data_inicio_projeto").datepicker({
            showAnim: "fadeIn"
        });
    });
    $(function () {
        $("#data_fim_projeto").datepicker({
            showAnim: "fadeIn"
        });
    });

    function calcularDiasProjeto() {
        var dataInicio = document.getElementById('data_inicio_projeto').value;
        var dataFim = document.getElementById('data_fim_projeto').value;

        var dataInicioBR = document.getElementById('data_inicio_projeto').value.split('/');
        var dataInicioUSA = new Date(dataInicioBR[2], dataInicioBR[1] - 1, dataInicioBR[0]);

        var dataFimBR = document.getElementById('data_fim_projeto').value.split('/');
        var dataFimUSA = new Date(dataFimBR[2], dataFimBR[1] - 1, dataFimBR[0]);

        var tempo = Math.abs(dataFimUSA.getTime() - dataInicioUSA.getTime());
        var dias = Math.ceil(tempo / (1000 * 60 * 60 * 24));

        var dataFimProjetoErro = document.getElementById('dataFimProjetoErro');

        if (dias < 15) {
            dataFimProjetoErro.removeAttribute('style');
            dataFimProjetoErro.innerHTML = "O projeto não pode ter uma duração menor que quinze (15) dias";
            return false;
        } else {
            dataFimProjetoErro.innerHTML = "";
        }

    }

    function verificarData() {
        var dataInicio = document.getElementById('data_inicio_projeto').value;
        var dataFim = document.getElementById('data_fim_projeto').value;

        if (dataInicio > dataFim) {
            dataFimProjetoErro.removeAttribute('style');
            dataFimProjetoErro.innerHTML = "Data fim do projeto não pode ser menor que data de início do projeto";
            return false;
        }
    }

//    function alterarStatusProjetoData() {
//        var dataInicio = document.getElementById('data_inicio_projeto').value;
//        var partesData = dataInicio.split("/");
//        var data = new Date(partesData[2],partesData[1] -1, partesData[0]);
//
//        if(data === new Date()){
//            alert('ok');
//        }
//
//    }


    $('#form_projeto').validate({
        // Define as regras
        rules: {
            nome_projeto: {
                required: true,
            },
            data_inicio_projeto: {
                required: true,
                dateformat: "required",
            },
            data_fim_projeto: {
                required: true,
            },
            cod_participante: {
                required: true,
            },
        },
        // Define as mensagens de erro para cada regra
        messages: {
            nome_projeto: {
                required: "Campo nome do projeto não pode ser vazio",
            },
            data_inicio_projeto: {
                required: "Campo data de início do projeto não pode ser vazio",
                dateformat: "Choose your preferred dateformat",
            },
            data_fim_projeto: {
                required: "Campo data fim do projeto não pode ser vazio",
            },
            cod_participante: {
                required: "Campo dono do projeto não pode ser vazio",
            },
        }
    });

</script>